from scapy.all import sniff, IP, TCP, UDP
from art import text2art
from colorama import Fore, Style, init

init()
    
def ascii_art():
    title = f"""
    {Fore.CYAN}
 _   _      _   _____                 _           
| \ | |    | | /  ___|               | |          
|  \| | ___| |_\ `--. _ __  _   _  __| | ___ _ __ 
| . ` |/ _ \ __|`--. \ '_ \| | | |/ _` |/ _ \ '__|
| |\  |  __/ |_/\__/ / |_) | |_| | (_| |  __/ |   
\_| \_/\___|\__\____/| .__/ \__, |\__,_|\___|_|   
                     | |     __/ |                
                     |_|    |___/                 
{Style.RESET_ALL}
"""
    spyder = f"""
    {Fore.CYAN}
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⢿⡿⠀⠈⠛⢿⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⡾⠟⠉⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣷⣦⣤⣀⣀⣀⣠⣤⣶⠿⠋⠀⣾⡇⠀⠀⠀⠀⠈⠙⠛⠿⢶⣶⣤⣤⣤⣄⣀⣀⣤⣤⣤⣴⡾⠛⠉⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⠘⣿⣤⣉⡉⠛⠋⠉⠁⠀⢀⣤⣾⣿⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⣩⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡇⠀⣿⣿⣿⠛⠿⠶⠶⠶⠿⠟⠋⣸⡟⠀⠙⠿⣶⣄⡀⠀⠀⠀⠀⠀⠀⢀⣠⣶⠿⢋⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠟⠀⠀⣿⡇⠹⣷⡄⠀⠀⠀⠀⢀⣠⣿⣇⠀⠀⠀⠀⠙⠻⠿⣶⣦⣤⣤⣶⠿⠋⠁⢀⣾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⠛⠻⠷⣶⣦⣤⣀⡀⠀⢀⣤⣶⠟⠁⠀⠀⣰⡿⠁⠀⠘⣿⣶⠶⠾⠿⠛⢻⣿⠛⢷⣦⣄⣀⠀⠀⢀⣤⣾⢿⣿⠀⠀⠀⠀⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠉⠛⠻⠿⣿⣯⣤⣀⡀⣀⣴⠟⠁⠀⠀⠀⣿⣿⣧⡀⠀⠀⣼⡏⠀⠀⠈⠙⢛⣿⣿⡟⠋⠀⢸⣿⠀⠀⠀⢰⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⡝⠛⢿⣷⣦⣤⣀⡀⣠⣿⠁⠹⣷⡄⠀⣿⠃⠀⣀⣴⡾⠟⠉⣿⠀⠀⠀⢸⣿⠀⠀⠀⣼⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣆⠀⠈⢿⣏⠙⠛⢿⣷⣦⣤⣘⣿⣾⣿⣴⡾⠟⠉⠀⠀⠀⣿⠀⠀⠀⠸⣿⠀⠀⠀⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡆⠀⠈⣿⡆⠀⢸⣿⠀⠉⣹⣿⣿⣿⣷⣤⣄⣀⠀⠀⠀⣿⡆⠀⠀⠀⣿⡇⠀⠀⠸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⣿⡇⠀⢸⣿⣶⠿⠛⢁⣿⠙⣿⡍⠙⠛⠿⢷⣦⣼⣷⣀⠀⠀⠘⣿⡀⠀⠀⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⠀⠀⣿⣧⣶⠿⠛⢿⣦⠀⢸⡟⠀⠈⢿⣆⠀⣠⡾⠛⠋⠉⠛⠻⢷⣶⣿⣧⣀⠀⠀⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⢀⣠⣾⣿⣯⣁⠀⠀⠀⢹⣧⣿⡇⠀⠀⠀⠻⣧⣿⠇⠀⠀⠀⠀⣤⡾⠟⠋⠙⠛⢿⣷⣶⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣾⠟⠋⠀⠀⠉⠛⢿⣦⡀⠀⢻⣿⡾⠿⠛⠛⠛⠿⣿⣄⠀⠀⢀⣾⠏⠀⠀⣠⣴⡾⠟⠛⠉⠉⠉⠛⠻⠷⣶⣤⣄⣀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡾⠿⠿⣶⣤⣀⠀⠀⠀⠀⠀⠙⣷⡀⣸⡏⠀⠀⠀⠀⠀⠀⠈⢿⣦⢀⣾⠏⠀⣠⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠻⠷⠆
⠀⠀⠀⠀⠀⠀⣀⣴⡾⠟⠉⠀⠀⠀⠀⠉⠻⢷⣦⡀⠀⠀⠀⠸⣷⣿⠇⠀⠀⢀⣀⣀⣠⣤⣤⣿⣿⡟⠀⢰⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⣴⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣦⡀⠀⠀⢿⣿⣴⡶⠿⠛⠛⠉⠉⠉⠉⠉⠙⣿⣄⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⡄⠀⣼⡏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣄⣿⠁⠀⠀⠀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣤⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡿⣀⣴⣶⠿⠛⠛⠉⠉⠉⠉⠉⠀⠀⠀⠀⠘⢿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀             
{Style.RESET_ALL}⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
    combined_art = title + spyder
    print(combined_art)


def packet_callback(packet):
    if IP in packet:
        ip_src = packet[IP].src
        ip_dst = packet[IP].dst
        protocol = packet[IP].proto

        if protocol == 6:
            protocol_name = "TCP"
        elif protocol == 17:
            protocol_name = "UDP"
        else:
            protocol_name = "Other"
        
        print(f"Source IP: {ip_src}")
        print(f"Destination IP: {ip_dst}")
        print(f"Protocol: {protocol_name}")

        if protocol ==6 or protocol == 17:
            payload = packet[IP].payload
            print(f"Payload: {bytes(payload)}")
ascii_art()
print("Starting packet capture...")
sniff(prn=packet_callback, store=0)
